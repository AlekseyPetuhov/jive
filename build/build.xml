<project name="jive" default="build">
    <import file="build-utils.xml"/>

    <property name="project.root.path" location=".."/>
    <property name="docs.path" location="${project.root.path}/docs"/>
    <property name="tests.path" location="${project.root.path}/tests"/>

    <target name="build">
        <antcall target="test"/>
        <antcall target="build.demos"/>
        <antcall target="gen.docs"/>
        <antcall target="build.schema"/>
    </target>

    <target name="build.demos">
          <antcall target="openfl">
              <param name="dir" value="${project.root.path}/demos/all-in-one"/>
              <param name="command" value="build"/>
              <param name="options" value="project.xml html5"/>
          </antcall>
        <antcall target="haxe">
            <param name="dir" value="${project.root.path}/demos/calendar"/>
            <param name="hxml" value="build.hxml"/>
        </antcall>
    </target>

    <target name="build.schema" depends="gen.docs">
        <exec dir="${project.root.path}" executable="haxelib" failonerror="true">
            <arg line="run hml-xsd-gen -xml ${docs.path}/jive.xml -xsd ${project.root.path}/schema -explicit"/>
        </exec>
    </target>

    <target name="test">
        <condition property="browser.option" value="-browser ${browser}" else="">
            <isset property="browser"/>
        </condition>
        <antcall target="haxe">
            <param name="dir" value="${project.root.path}"/>
            <param name="hxml" value="tests/gen.hxml"/>
        </antcall>
        <antcall target="munit">
            <param name="dir" value="${project.root.path}"/>
            <param name="command" value="gen"/>
            <param name="options" value=""/>
        </antcall>
        <antcall target="openfl">
            <param name="dir" value="${project.root.path}/tests"/>
            <param name="command" value="build"/>
            <param name="options" value="project.xml html5 -Dtest"/>
        </antcall>

        <copy file="${project.root.path}/tests/bin/html5/bin/snap.svg.js"
              tofile="${project.root.path}/tests/resources/snap.svg.js"/>

        <copy todir="${project.root.path}/tests/resources/assets">
            <fileset dir="${project.root.path}/tests/bin/html5/bin/assets"/>
        </copy>

        <antcall target="munit">
            <param name="dir" value="${project.root.path}"/>
            <param name="command" value="test"/>
            <param name="options" value="-nogen ${browser.option}"/>
        </antcall>
    </target>

    <target name="test.oneTest">
        <condition property="browser.option" value="-browser ${browser}" else="">
                <isset property="browser"/>
        </condition>
        <antcall target="haxe">
            <param name="dir" value="${project.root.path}"/>
            <param name="hxml" value="tests/gen.hxml"/>
        </antcall>
        <antcall target="munit">
            <param name="dir" value="${project.root.path}"/>
            <param name="command" value="gen"/>
            <param name="options" value="-filter ${test}"/>
        </antcall>
        <antcall target="openfl">
            <param name="dir" value="${project.root.path}/tests"/>
            <param name="command" value="build"/>
            <param name="options" value="project.xml html5 -Dtest"/>
        </antcall>

        <copy file="${project.root.path}/tests/bin/html5/bin/snap.svg.js"
                tofile="${project.root.path}/tests/resources/snap.svg.js"/>

        <copy todir="${project.root.path}/tests/resources/assets">
            <fileset dir="${project.root.path}/tests/bin/html5/bin/assets"/>
        </copy>

        <antcall target="munit">
            <param name="dir" value="${project.root.path}"/>
            <param name="command" value="test"/>
            <param name="options" value="-nogen ${browser.option}"/>
        </antcall>
    </target>

    <target name="gen.docs">
        <antcall target="haxe">
            <param name="hxml" value="docs.hxml"/>
        </antcall>

        <antcall target="dox">
            <param name="dir" value="${docs.path}"/>
            <param name="input.path" value="jive.xml"/>
            <param name="output.path" value="api"/>
            <param name="theme.path" value="themes/haxeui-dox-theme"/>
        </antcall>
    </target>
</project>